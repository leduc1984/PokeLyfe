# Create your views here.
from django.http import HttpResponse, HttpResponseRedirect
import time
import json
from models import *

def home(request):
    return HttpResponse(open("/home/matthew/Capstone/Pokemon/templates/papertutorial.html").read(),
                        content_type="text/html")

def timenow(request):
    return HttpResponse(time.time(), content_type="text/plain")

def getchar(request):
    cid = request.session.get("charid")
    if cid:
        c = Character.objects.get(id=cid)
    else:
        c = Character.objects.create(x=100,
                                     y=100)
        request.session["charid"] = c.id
        request.session.save()
    return c

def keydown(request):
    """
    The client will send a request to this view
    whenever a key is pressed.  This view will update
    the character's position in the database, but it
    will not actually return any data.

    Example use:
    /keydown?key=up
    /keydown?key=down
    """
    cid = request.session.get("charid")
    if cid:
        c = Character.objects.get(id=cid)
    else:
        c = Character.objects.create(x=100,
                                     y=100)
        request.session["charid"] = c.id
        request.session.save()
    dy = 30
    dx = 30
    pressed = lambda s: request.GET.get(s) == "true"
    dirs = {"up":"c.y-=dy",
            "down":"c.y+=dy",
            "left":"c.x-=dx",
            "right":"c.x+=dx",
            }
    for d, s in dirs.items():
        if pressed(d):
            exec(s) in globals(), locals()
    c.save()    
    return HttpResponse()

def myposition(request):
    """
    This simpy returns the current x, y coordinate
    of the client's character.  This will be called
    in onFrame in the JavaScript.
    """
    c = getchar(request)
    return HttpResponse(json.dumps({"x":c.x,
                                    "y":c.y}),
                        content_type="application/json")


    
def movement(request):
    cid = request.session.get("charid")
    if cid:
        c = Character.objects.get(id=cid)
    else:
        c = Character.objects.create(x=100,
                                     y=100)
        request.session["charid"] = c.id
        request.session.save()
    dy = 17
    dx = 17
    pressed = lambda s: request.GET.get(s) == "true"
    dirs = {"up":"c.y-=dy",
            "down":"c.y+=dy",
            "left":"c.x-=dx",
            "right":"c.x+=dx",
            }
    for d, s in dirs.items():
        if pressed(d):
            exec(s) in globals(), locals()
    c.save()
    return HttpResponse(json.dumps({"x":c.x,
                                    "y":c.y}),
                        content_type="application/json")
